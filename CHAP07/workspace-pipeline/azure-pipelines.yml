# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master
pool:
  vmImage: 'ubuntu-latest'

steps:

  - task: TerraformInstaller@1
    inputs:
      terraformVersion: 'latest'
    displayName: Terraform Install
  - task: TerraformTaskV4@4
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: 'CHAP07/workspace-pipeline/'
      backendServiceArm: 'Terraform_ARM'
      backendAzureRmResourceGroupName: 'diag-rg'
      backendAzureRmStorageAccountName: 'thiguishdiag'
      backendAzureRmContainerName: 'terraform'
      backendAzureRmKey: 'cookbook.tfstate'
    displayName: Init

  - task: TerraformTaskV4@4
    inputs:
      provider: 'azurerm'
      command: 'validate'
      workingDirectory: 'CHAP07/workspace-pipeline/'
    displayName: Validate

  - task: PowerShell@2
    inputs:
      filePath: 'CHAP07/workspace-pipeline/ManageWorkspaces.ps1'
      arguments: '$(Build.SourceBranchName)'
      workingDirectory: "CHAP07/workspace-pipeline/"
    displayName: Workspace

  - task: TerraformTaskV4@4
    inputs:
      provider: 'azurerm'
      command: 'plan'
      workingDirectory: '''CHAP07/workspace-pipeline/'''
      commandOptions: '-out="out.tfplan"'
      environmentServiceNameAzureRM: 'Terraform_ARM'

  - task: TerraformTaskV4@4
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: 'CHAP07/workspace-pipeline/'
      commandOptions: '-out="out.tfplan"'
    displayName: Apply
